plugins {
    id 'groovy'
    id 'maven'
    id 'org.ysb33r.bintray' version '1.5'
    id 'org.ysb33r.cloudci' version '1.0'
    id 'org.ysb33r.gradletest' version '1.0-beta5'
    id 'com.jfrog.artifactory' version '3.0.1'
    id 'com.github.hierynomus.license' version '0.13.1'
}

import org.ysb33r.gradle.bintray.BintraySignVersion


group = 'org.ysb33r.gradle'
archivesBaseName = 'doxygen'
version = '0.3-SNAPSHOT'
sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
    moduleName = rootProject.name
    bintrayOwner = 'ysb33r'
    bintrayRepo = 'grysb33r'
    doxygenTestVersion = '1.8.9'
    doxygenDownloadDir = new File(buildDir,'doxygen')
    spockGroovyVer = GroovySystem.version.replaceAll(/\.\d+$/,'')
}

repositories {
    jcenter()
}

jar {
    manifest {
        attributes 'Implementation-Title': moduleName, 'Implementation-Version': version
    }
}

test {
    systemProperties 'TESTFSREADROOT'  : new File(projectDir,'src/test/resources').absolutePath
    systemProperties 'TESTFSWRITEROOT' : new File(buildDir,'tmp/test/doxygen').absolutePath
    systemProperties 'DOXY_TEMPLATE'   : new File(projectDir,'src/main/resources/doxyfile-template.dox').absolutePath

    // Use -PDO_NOT_RUN_DOXYGEN_EXE_TESTS=1 to skip any test that requires the 'doxygen' executable
    if(project.properties.DO_NOT_RUN_DOXYGEN_EXE_TESTS) {
        systemProperties 'DO_NOT_RUN_DOXYGEN_EXE_TESTS' : '1'
    }

    // The location of the doxygen executable can be controlled by setting -PDOXYGEN_PATH=/path/to/doxygen
    // on the cmd-line
    if(project.properties.DOXYGEN_PATH) {
        systemProperties 'DOXYGEN_PATH' : new File(project.properties.DOXYGEN_PATH).absolutePath
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    description "An archive of the JavaDocs for Maven Central"
    classifier "javadoc"
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile ("org.spockframework:spock-core:1.0-groovy-${spockGroovyVer}") {
        exclude module : 'groovy-all'
    }
}

artifactory {
    publish {
        contextUrl = 'http://oss.jfrog.org'
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.properties.bintrayUserName
            password = project.properties.bintrayApiKey
        }
    }
}

artifactoryPublish {
    onlyIf { version.endsWith("SNAPSHOT") }
}

task signArchives (type:BintraySignVersion ) {
    username    project.properties.bintrayUserName
    apiKey      project.properties.bintrayApiKey
    repoOwner   bintrayOwner
    repoName    bintrayRepo
    packageName moduleName
    gpgPassphrase     project.properties.bintrayGpgPassphrase
}


uploadArchives  {
    repositories {
        bintrayMavenDeployer {
            username          project.properties.bintrayUserName
            apiKey            project.properties.bintrayApiKey
            repoOwner         bintrayOwner
            repoName          bintrayRepo
            packageName       moduleName
            description       'This is a plugin for Gradle that allows Doxygen (www.doxygen.org) to be used to generate documentation'
            tags              'gradle','doxygen','documentation'
            licenses          'Apache-2.0'
            vcsUrl            'https://github.com/ysb33r/doxygen-gradle-plugin.git'
            autoCreatePackage true
            updatePackage     true
            versionAttributes 'gradle-plugin' : "org.ysb33r.doxygen:${group}:${archivesBaseName}"
        }
    }

    onlyIf { !version.endsWith("SNAPSHOT") }
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = false
    mapping {
        groovy ='DOUBLESLASH_STYLE'
    }
    ext.year = '2013-2015'
    excludes(['**/*.ad', '**/*.asciidoc', '**/*.adoc', '**/*.md','**/*.properties','**/*.dox'])
}

gradleTest {
    versions '2.0', '3.2.1'
}

appveyor {

}

travisci {

}

//task downloadDoxygen << {
//    mkdir doxygenDownloadDir
//    vfs {
//        cp "zip:http://ftp.stack.nl/pub/users/dimitri/doxygen-${doxygenTestVersion}.windows.bin.zip", doxygenDownloadDir,
//            overwrite : true, recursive : true
//    }
//
//}
//
//downloadDoxygen {
//    onlyIf { System.env.APPVEYOR }
//}
